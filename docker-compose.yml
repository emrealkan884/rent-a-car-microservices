services:
  keycloak:
    image: quay.io/keycloak/keycloak
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    volumes:
      - C:\Users\toor\Desktop\volumes\keycloak:/opt/keycloak/data

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - C:\Users\toor\Desktop\volumes\mongodb:/data/db

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 12345
    ports:
      - 5432:5432
    volumes:
      - C:\Users\toor\Desktop\volumes\postgres:/var/lib/postgresql/data

  discovery-server:
    build: ./discovery-server
    ports:
      - 8761:8761
    environment:
      - eureka.instance.prefer-ip-address= true
    depends_on:
      - keycloak

  car-service:
    build: ./car-service
    ports:
      - 6002:6002
    environment:
      - eureka.instance.prefer-ip-address=true
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
      - spring.data.mongodb.uri=mongodb://root:root@mongodb:27017/carService?authSource=admin
    depends_on:
      - discovery-server
      - mongodb

  api-gateway:
    build: ./api-gateway
    ports:
      - 9999:9999
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: [ "./wait-for-it.sh", "car-service:6002" ]

  rental-service:
    build: ./rental-service
    ports:
      - 6001:6001
    mem_limit: 700m
    environment:
      - eureka.instance.prefer-ip-address=true
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
      - spring.datasource.url=jdbc:postgresql://postgres:5432/rental-service
      - spring.kafka.bootstrap-servers=kafka:9092
    depends_on:
      - discovery-server
      - postgres
      - notification-service

  customer-service:
    build: ./customer-service
    ports:
      - 6003:6003
    environment:
      - eureka.instance.prefer-ip-address=true
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
      - spring.datasource.url=jdbc:postgresql://postgres:5432/customer-service

  notification-service:
    build: ./notification-service
    ports:
      - 6004:6004
    environment:
      - spring.kafka.bootstrap-servers=kafka:9092



  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-manager:
    image: hlebalbau/kafka-manager
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: zookeeper:2181
    depends_on:
      - kafka
